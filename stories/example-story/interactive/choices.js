/**
 * Example Choices Module
 * In actual stories, this would be generated by AI based on story content
 */

function initChoices(containerId) {
  const container = document.getElementById(containerId);
  if (!container) {
    console.error('Choices container not found');
    return;
  }

  const scenarios = [
    {
      situation: "Alex sees another child waiting for the slide. What should Alex do?",
      choices: [
        { text: "Push past them", feedback: "That wouldn't be kind. It's better to wait our turn.", helpful: false },
        { text: "Wait patiently for their turn", feedback: "Great choice! Waiting our turn shows respect for others.", helpful: true },
        { text: "Go home immediately", feedback: "We don't have to leave. We can wait for a turn!", helpful: false }
      ]
    },
    {
      situation: "Alex is getting tired and thirsty. What should Alex do?",
      choices: [
        { text: "Keep playing without stopping", feedback: "It's important to rest and drink water when we're tired.", helpful: false },
        { text: "Take a break and drink some water", feedback: "Perfect! Resting and drinking water helps us stay healthy.", helpful: true },
        { text: "Complain and cry", feedback: "It's okay to feel tired, but asking politely for a break is better.", helpful: false }
      ]
    }
  ];

  let currentScenario = 0;

  function renderScenario() {
    if (currentScenario >= scenarios.length) {
      showComplete();
      return;
    }

    const scenario = scenarios[currentScenario];
    container.innerHTML = `
      <div class="quiz-question">
        <h3>Scenario ${currentScenario + 1} of ${scenarios.length}</h3>
        <p style="font-size: 1.2rem; margin: 20px 0; padding: 15px; background: #F0F7FF; border-radius: 8px;">
          ${scenario.situation}
        </p>
        <div class="quiz-options">
          ${scenario.choices.map((choice, i) => `
            <button class="quiz-option" data-index="${i}">
              ${choice.text}
            </button>
          `).join('')}
        </div>
        <div id="feedback" style="margin-top: 20px;"></div>
      </div>
    `;

    container.querySelectorAll('.quiz-option').forEach(btn => {
      btn.addEventListener('click', (e) => {
        const selected = parseInt(e.target.dataset.index);
        const choice = scenario.choices[selected];
        
        const feedback = document.getElementById('feedback');
        feedback.innerHTML = `
          <div class="message ${choice.helpful ? 'message-success' : 'message-info'}">
            ${choice.feedback}
            ${!choice.helpful ? '<br><br><button class="btn btn-secondary" onclick="location.reload()">Try Again</button>' : ''}
            ${choice.helpful ? '<br><br><button class="btn btn-primary" id="next-btn">Next â†’</button>' : ''}
          </div>
        `;

        if (choice.helpful) {
          document.getElementById('next-btn').addEventListener('click', () => {
            currentScenario++;
            renderScenario();
          });
        }

        container.querySelectorAll('.quiz-option').forEach(b => b.disabled = true);
      });
    });
  }

  function showComplete() {
    container.innerHTML = `
      <div class="score-display">
        <h2>All Scenarios Complete! ðŸŽ‰</h2>
        <p style="font-size: 1.2rem; margin: 20px 0;">
          You've learned about making good choices at the park!
        </p>
        <button class="btn btn-primary" onclick="location.reload()">Try Again</button>
      </div>
    `;
  }

  renderScenario();
}

// Auto-initialize if container exists
document.addEventListener('DOMContentLoaded', () => {
  if (document.getElementById('choices-container')) {
    initChoices('choices-container');
  }
});

